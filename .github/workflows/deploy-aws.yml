name: Build and Push Docker Image

on:
  workflow_dispatch:
    inputs:
      tag_name:
        description: 'Git tag to use for the Docker image'
        required: true
        default: 'latest'

jobs:
  build-and-push:
    runs-on: ubuntu-latest

    steps:
      # Checkout the repository
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0  # Fetch all history so we can checkout tags

      # Set up Docker Buildx (for advanced Docker build features)
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      # Set up AWS CLI
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v3
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: eu-west-1

      # Set up Sentry CLI
      - name: Set up Sentry CLI
        run: |
          curl -sL https://sentry.io/get-cli/ | bash
          sentry-cli login --auth-token=${{ secrets.SENTRY_AUTH_TOKEN }}

      # Switch to the specified Git tag from the input
      - name: Switch to the specified Git tag
        run: |
          git fetch --tags  # Fetch all tags
          git checkout tags/${{ github.event.inputs.tag_name }}

      # Use the Git tag from manual input
      - name: Use tag input
        run: echo "GIT_TAG=${{ github.event.inputs.tag_name }}" >> $GITHUB_ENV

      # Log in to AWS ECR
      - name: Log in to Amazon ECR
        id: ecr-login
        run: |
          aws ecr get-login-password --region ${{ secrets.AWS_REGION }} | docker login --username AWS --password-stdin ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com

      # Build and tag the Docker image
      - name: Build Docker image
        run: |
          docker build -t shop-api:latest . \
            --build-arg SENTRY_AUTH_TOKEN=${{ secrets.SENTRY_AUTH_TOKEN }}

      # Tag the Docker image with input Git tag
      - name: Tag Docker image
        run: |
          docker tag shop-api:latest ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com/shop/shop-api:${{ env.GIT_TAG }}

      # Push the Docker image to ECR
      - name: Push Docker image to ECR
        run: |
          docker push ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com/shop/shop-api:${{ env.GIT_TAG }}